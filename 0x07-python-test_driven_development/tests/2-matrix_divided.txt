>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_A = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> matrix_B = [[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix_A, 4))
[[0.25, 0.5, 0.75], [1.0, 1.25, 1.5], [1.75, 2.0, 2.25]]
>>> print(matrix_divided(matrix_B, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Faulty rep of a matrix
>>> empty = None
>>> empty_matrix = []
>>> empty_rows = [[], [], []]
>>> not_matrix = [23, [2, 4], [1, 2, 3]]
>>> matrix_with_diff_values = [[1, "poly", 2], [3, 4, "five"], ["2one", 5, 6]]
>>> irregular_size_matrix = [[10,23,3,3,1], [3,5], [4,2,8,3]]

>>> matrix_divided(empty, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(empty_rows, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(not_matrix, 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix_with_diff_values, 5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(irregular_size_matrix, 12)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided(matrix_A, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
